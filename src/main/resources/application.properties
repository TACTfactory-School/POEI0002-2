server.port=8777


# ===============================
# = DATA SOURCE
# ===============================

# Connection url for the database
spring.datasource.url = jdbc:mysql://localhost:3306/ovg

# Username and password
spring.datasource.username = root
spring.datasource.password =

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = create-drop

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

number.fakeuser = 150
number.fakeevent = 25

spring.session.store-type=jdbc
spring.session.jdbc.initialize-schema=always

security.oauth2.resource.filter-order=3

security.signing-key=MaYzkSjmkzPC57L
security.encoding-strength=256
security.security-realm=Spring Boot JWT Example Realm


security.jwt.client-id=ANG
security.jwt.client-secret=POEI0002-2
security.jwt.grant-type=password
security.jwt.scope-read=read
security.jwt.scope-write=write
security.jwt.resource-ids=testjwtresourceid
token.validity=100000
token.refresh.validity=50000

check-user-scopes: true
